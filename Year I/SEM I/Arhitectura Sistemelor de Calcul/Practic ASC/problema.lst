     1                                  ; Se citeste de la tastatura un numar m si un numar n. Se citesc apoi de la tastatura m numere scrise in zecimal, numere fara semn, pe linii diferite. Sa se scrie in fisierul output.txt doar acele numere care au cel
     2                                  
     3                                  ; Daca m=4 si n=3
     4                                  ; 132463
     5                                  ; 12345 
     6                                  
     7                                  ; 12121212
     8                                  ; 1234568
     9                                  
    10                                  
    11                                  ; output.txt :   132463   12121212    1234568
    12                                  
    13                                  
    14                                  
    15                                  bits 32 
    16                                  global start        
    17                                  
    18                                  
    19                                  extern exit, fprintf, scanf, fopen, fclose               
    20                                  import exit msvcrt.dll    
    21                                  import fopen msvcrt.dll
    22                                  import fclose msvcrt.dll
    23                                  import printf msvcrt.dll
    24                                  import scanf msvcrt.dll
    25                                  import fprintf msvcrt.dll
    26                                  segment data use32 class=data
    27 00000000 7700                       access db "w", 0
    28 00000002 FFFFFFFF                   descriptor dd -1
    29 00000006 6F75747075742E7478-        nume_fisier db "output.txt", 0
    29 0000000F 7400               
    30 00000011 <res 00000004>             m resd 1
    31 00000015 <res 00000004>             n resd 1
    32 00000019 <res 00000004>             numar resd 1
    33 0000001D 256400                     format_zecimal db "%d", 0
    34 00000020 00000000                   contor dd 0
    35                                  segment code use32 class=code
    36                                      start:
    37 00000000 68[11000000]                    push dword m
    38 00000005 68[1D000000]                    push dword format_zecimal
    39 0000000A FF15[00000000]                  call [scanf]
    40 00000010 83C408                          add esp, 4 * 2
    41                                          
    42 00000013 68[15000000]                    push dword n
    43 00000018 68[1D000000]                    push dword format_zecimal
    44 0000001D FF15[00000000]                  call [scanf]
    45 00000023 83C408                          add esp, 4 * 2
    46                                          
    47 00000026 68[00000000]                    push dword access
    48 0000002B 68[06000000]                    push dword nume_fisier
    49 00000030 FF15[00000000]                  call [fopen]
    50 00000036 83C408                          add esp, 4 * 2
    51                                          
    52 00000039 83F800                          cmp eax, 0
    53 0000003C 0F8499000000                    je final
    54                                          
    55 00000042 A3[02000000]                    mov [descriptor], eax
    56                                          
    57 00000047 8B1D[11000000]                  mov ebx, [m]
    58                                          
    59                                          bucla:
    60 0000004D 83FB00                              cmp ebx, 0
    61 00000050 747A                                je inchidere_fisier
    62                                              
    63 00000052 68[19000000]                        push dword numar
    64 00000057 68[1D000000]                        push dword format_zecimal
    65 0000005C FF15[00000000]                      call [scanf]
    66 00000062 83C408                              add esp, 4 * 2
    67 00000065 31D2                                xor edx, edx
    68                                              
    69                                                  
    70 00000067 81F6[19000000]                      xor esi, numar
    71 0000006D 31C0                                xor eax, eax
    72                                              
    73 0000006F A1[19000000]                        mov eax, [numar]
    74                                              repeta:
    75 00000074 31D2                                    xor edx, edx
    76 00000076 83F800                                  cmp eax, 0
    77 00000079 74D2                                    je bucla
    78                                                  
    79                                                  div dword 10
    79          ******************       error: invalid combination of opcode and operands
    80                                                  
    81 0000007B 83FA02                                  cmp edx, 2
    82 0000007E 7416                                    je aduna
    83                                                  
    84 00000080 83FA04                                  cmp edx, 4
    85 00000083 7411                                    je aduna
    86                                                  
    87 00000085 83FA06                                  cmp edx, 6
    88 00000088 740C                                    je aduna
    89                                                  
    90 0000008A 83FA08                                  cmp edx, 8
    91 0000008D 7407                                    je aduna
    92                                                  
    93 0000008F 83FA00                                  cmp edx, 0 
    94 00000092 7402                                    je aduna
    95                                                  
    96 00000094 EBDE                                    jmp repeta
    97                                              aduna:
    98 00000096 BF01000000                              mov edi, 1
    99 0000009B 013D[20000000]                          add [contor], edi
   100 000000A1 8B3D[20000000]                          mov edi, [contor]
   101 000000A7 3B3D[15000000]                          cmp edi, [n]
   102                                             
   103 000000AD 7603                                    jbe afisare
   104                                                  
   105 000000AF 46                                      inc esi
   106 000000B0 EBC2                                    jmp repeta
   107                                              afisare:
   108 000000B2 FF35[19000000]                          push dword [numar]
   109 000000B8 FF35[1D000000]                          push dword [format_zecimal]
   110 000000BE FF35[02000000]                          push dword [descriptor]
   111 000000C4 83C40C                                  add esp, 4 * 3
   112                                                  
   113 000000C7 EB84                                    jmp bucla
   114                                              flow:
   115 000000C9 4B                                      dec ebx
   116 000000CA EB81                                    jmp bucla
   117                                          
   118                                          inchidere_fisier:
   119 000000CC FF35[02000000]                      push dword [descriptor]
   120 000000D2 FF15[00000000]                      call [fclose]
   121 000000D8 83C404                              add esp, 4 * 1
   122                                          
   123                                          final:
   124 000000DB 6A00                                push dword 0
   125 000000DD FF15[00000000]                      call [exit]
   126                                          
