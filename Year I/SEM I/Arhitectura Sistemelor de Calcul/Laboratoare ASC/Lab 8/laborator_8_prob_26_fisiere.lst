     1                                  bits 32
     2                                  global start
     3                                  
     4                                  ;Se da un nume de fisier (definit in segmentul de date). Sa se creeze un fisier cu numele dat, apoi sa se ;citeasca de la tastatura cuvinte pana cand se citeste de la tastatura caracterul '$'. Sa se scrie in fisier 
     5                                  
     6                                  
     7                                  extern exit, fopen, fclose, fprintf, scanf, printf
     8                                  import exit msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import scanf msvcrt.dll
    12                                  import fprintf msvcrt.dll
    13                                  import printf msvcrt.dll
    14                                  
    15                                  section data use32 class=data
    16 00000000 <res 0000012C>              cuvant resb 300
    17 0000012C 257300                      format_access db "%s", 0
    18 0000012F 6100                        mod_access db 'a', 0
    19 00000131 FFFFFFFF                    descriptor dd -1
    20 00000135 6F75747075745F6C61-         fisier db "output_lab8.txt", 0
    20 0000013E 62382E74787400     
    21 00000145 2000                        spatiu db " ", 0
    22                                  section code use32 class=code
    23                                      start:
    24                                          ; accesare fisier -> deschidere    
    25 00000000 68[2F010000]                    push dword mod_access
    26 00000005 68[35010000]                    push dword fisier
    27 0000000A FF15[00000000]                  call [fopen]
    28 00000010 83C408                          add esp, 4 * 2
    29                                          
    30                                          ; verificare descriptor fisier diferit de 0, zf = 0
    31 00000013 A3[31010000]                    mov [descriptor], eax
    32 00000018 83F800                          cmp eax, 0
    33 0000001B 746E                            je final 
    34                                      
    35                                      
    36                                          repeta:
    37                                              ; citire cuvint
    38 0000001D 68[00000000]                        push dword cuvant
    39 00000022 68[2C010000]                        push dword format_access
    40 00000027 FF15[00000000]                      call [scanf]
    41 0000002D 83C408                              add esp, 4 * 2
    42                                              
    43                                              ; verficare primul caracter e $
    44 00000030 A0[00000000]                        mov al, byte[cuvant]
    45 00000035 3C24                                cmp al, '$'
    46 00000037 7452                                je final
    47                                              
    48 00000039 BE[00000000]                        mov esi, cuvant ; punem in esi cuvant 
    49 0000003E 31C9                                xor ecx, ecx ; ecx = 0
    50 00000040 31D2                                xor edx, edx ; edx = 0
    51                                              bucla:
    52 00000042 8A1C0E                                  mov bl, byte[esi + ecx] ; pun in bl caracterul curent 
    53                                                  
    54 00000045 80FB00                                  cmp bl, 0 ; verific daca sunt la final de cuvant
    55 00000048 740F                                    je litera_mare ; daca e la final 
    56                                                      
    57 0000004A 80FB41                                  cmp bl, 'A' ; verifcam daca e mai mic ca 'A'
    58 0000004D 7C39                                    jl mai_departe
    59                                                  
    60 0000004F 80FB5A                                  cmp bl, 'Z' ; verifcam daca e mai mare ca 'Z'
    61 00000052 7F34                                    jg mai_departe
    62                                                  
    63 00000054 BA01000000                              mov edx, 1   ; daca a ajuns aici insemana ca e litera mare si facem edx = 1
    64                                                  
    65                                              litera_mare:
    66 00000059 83FA01                                  cmp edx, 1 
    67                                                  ; dupa ce am terminat cuvantul daca e zf = 1 afisam daca nu repetam cu alt cuvant
    68 0000005C 75BF                                    jne repeta
    69                                                  
    70                                                  ; afisare in fisier 
    71 0000005E 68[00000000]                            push dword cuvant
    72 00000063 FF35[31010000]                          push dword [descriptor]
    73 00000069 FF15[00000000]                          call [fprintf]
    74 0000006F 83C408                                  add esp, 4 * 2
    75                                                  
    76 00000072 68[45010000]                            push dword spatiu 
    77 00000077 FF35[31010000]                          push dword [descriptor]
    78 0000007D FF15[00000000]                          call [fprintf]
    79 00000083 83C408                                  add esp, 4 * 2
    80                                                  
    81                                                  ; continuam cu urmatorul cuvant
    82 00000086 EB95                                    jmp repeta
    83                                                  
    84                                              mai_departe:
    85                                                  ; incrementare ecx
    86 00000088 41                                      inc ecx
    87                                                  ; salt la urm caracter
    88 00000089 EBB7                                    jmp bucla
    89                                         
    90                                          final:
    91                                              ; inchidere fisier
    92 0000008B FF35[31010000]                      push dword [descriptor]
    93 00000091 FF15[00000000]                      call [fclose]
    94 00000097 83C404                              add esp, 4 * 1
    95                                              
    96                                              ; oprire program
    97 0000009A 6A00                                push dword 0
    98 0000009C FF15[00000000]                      call [exit]
