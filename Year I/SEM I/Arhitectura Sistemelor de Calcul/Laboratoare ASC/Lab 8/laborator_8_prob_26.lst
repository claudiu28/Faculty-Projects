     1                                  bits 32 
     2                                  global start        
     3                                  
     4                                  extern exit, printf, scanf              
     5                                  import exit msvcrt.dll    
     6                                  import printf msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  segment data use32 class=data
     9                                      ; valoarea operatiei: (b - a) * k este: 
    10 00000000 00000000                    a dd 0
    11 00000004 00000000                    b dd 0
    12 00000008 03000000                    k dd 3
    13 0000000C 56616C6F6172656120-         message_a db "Valoarea lui a este: ", 0
    13 00000015 6C7569206120657374-
    13 0000001E 653A2000           
    14 00000022 56616C6F6172656120-         message_b db "Valoarea lui b este: ", 0
    14 0000002B 6C7569206220657374-
    14 00000034 653A2000           
    15 00000038 256400                      format db "%d", 0
    16 0000003B 256C6C7800                  format_base16 db "%llx", 0
    17 00000040 56616C6F6172656120-         message_rezultat db "Valoarea operatiei (b - a) * k este: ", 0
    17 00000049 6F7065726174696569-
    17 00000052 202862202D20612920-
    17 0000005B 2A206B20657374653A-
    17 00000064 2000               
    18 00000066 0000000000000000            rezultat dq 0   
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 68[0C000000]                    push dword message_a ; mesaj introducere pentru a
    23 00000005 FF15[00000000]                  call [printf] ; apelare functie printf
    24 0000000B 83C404                          add esp, 4 * 1 ; golire stiva
    25                                          
    26 0000000E 68[00000000]                    push dword a ; citire a
    27 00000013 68[38000000]                    push dword format ; format baza 10
    28 00000018 FF15[00000000]                  call [scanf] ; apelare functie citire
    29 0000001E 83C408                          add esp, 4 * 2 ; golire stiva
    30                                          
    31 00000021 68[22000000]                    push dword message_b ; mesaj introducere pt b
    32 00000026 FF15[00000000]                  call [printf] ; apelare functie printf
    33 0000002C 83C404                          add esp, 4 * 1 ; golire stiva
    34                                          
    35 0000002F 68[04000000]                    push dword b ; adaugare in stiva b
    36 00000034 68[38000000]                    push dword format ; format baza 10
    37 00000039 FF15[00000000]                  call [scanf] ; apelare functie citire 
    38 0000003F 83C408                          add esp, 4 * 2 ; golire citire
    39                                  
    40                                          
    41 00000042 A1[04000000]                    mov eax, [b] ; punem in eax valoarea lui [b]
    42 00000047 2B05[00000000]                  sub eax, [a] ; scadem valoarea lui [a]   
    43 0000004D F72D[08000000]                  imul dword[k] ; obtinem dupa inmultire rezultat in edx : eax 
    44                                              
    45                                          ; construire rezultat
    46 00000053 0105[66000000]                  add [rezultat], eax ; adunare in rez eax
    47 00000059 1115[6A000000]                  adc [rezultat + 4], edx ; adunare in rez edx 
    48                                          
    49                                          ; mesaj de rezultat 
    50 0000005F 68[40000000]                    push dword message_rezultat
    51 00000064 FF15[00000000]                  call [printf] ; apelare functie de print
    52 0000006A 83C404                          add esp, 4 * 1 ; golire stiva
    53                                          
    54                                          ;printare qward -> 
    55 0000006D FF35[6A000000]                  push dword [rezultat + 4]; edx
    56 00000073 FF35[66000000]                  push dword [rezultat] ; eax
    57 00000079 68[3B000000]                    push dword format_base16 ; format in baza 16
    58 0000007E FF15[00000000]                  call [printf] ; apelare functie printf
    59 00000084 83C40C                          add esp, 4 * 3 ; curatare stiva
    60                                                 
    61 00000087 6A00                            push    dword 0     
    62 00000089 FF15[00000000]                  call    [exit]       
