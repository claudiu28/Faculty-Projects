     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 02                          a db 2
    15 00000001 0300                        b dw 3
    16 00000003 04000000                    c dd 4
    17 00000007 0500000000000000            d dq 5 
    18                                      ;(c-b+a)-(d+a) = 4 - 3 + 2 = 3 - 7 = -4
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                         
    24 00000000 8B0D[03000000]                  mov ecx, [c]
    25 00000006 66A1[01000000]                  mov ax, [b]
    26 0000000C 66BA0000                        mov dx, 0 
    27 00000010 6652                            push dx
    28 00000012 6650                            push ax
    29 00000014 58                              pop eax 
    30 00000015 19C8                            sbb eax, ecx
    31 00000017 8A1D[01000000]                  mov bl, [b]
    32 0000001D B700                            mov bh, 0
    33 0000001F 66B90000                        mov cx, 0
    34 00000023 6651                            push cx
    35 00000025 6653                            push bx
    36 00000027 5B                              pop ebx
    37 00000028 11D8                            adc eax, ebx 
    38 0000002A BA00000000                      mov edx, 0   
    39 0000002F 8A1D[00000000]                  mov bl, [a]
    40 00000035 B700                            mov bh, 0
    41 00000037 66B90000                        mov cx, 0
    42 0000003B 6651                            push cx
    43 0000003D 6653                            push bx
    44 0000003F 5B                              pop ebx
    45 00000040 B900000000                      mov ecx, 0
    46 00000045 031D[07000000]                  add ebx, [d]
    47 0000004B 29D8                            sub eax,ebx
    48 0000004D 19CA                            sbb edx,ecx
    49                                          ; exit(0)
    50 0000004F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    51 00000051 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
