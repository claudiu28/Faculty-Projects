     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0A                            a db 10
    15 00000001 1400                          b dw 20
    16 00000003 1E000000                      c dd 30
    17 00000007 2800000000000000              d dq 40
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...(d+c) - (c+b) - (b+a)
    22 00000000 A1[03000000]                    mov eax, [c]
    23 00000005 BA00000000                      mov edx, 0     
    24 0000000A 0305[07000000]                  add eax, [d]
    25 00000010 1315[0B000000]                  adc edx, [d+4] 
    26                                          
    27                                          
    28 00000016 8B1D[01000000]                  mov ebx, [b]				
    29 0000001C 031D[03000000]                  add ebx, [c]
    30                                        
    31 00000022 B900000000                      mov ecx, 0
    32 00000027 29D8                            sub eax, ebx
    33 00000029 19CA                            sbb edx, ecx
    34                                          
    35 0000002B BB00000000                      mov ebx, 0
    36 00000030 8A1D[00000000]                  mov bl, [a]
    37 00000036 B700                            mov bh, 0       
    38 00000038 66031D[01000000]        		add bx, [b]
    39                                          
    40 0000003F B900000000                      mov ecx, 0
    41 00000044 29D8                            sub eax, ebx
    42 00000046 19CA                            sbb edx, ecx
    43                                        
    44                                              
    45                                          ; exit(0)
    46 00000048 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    47 0000004A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
