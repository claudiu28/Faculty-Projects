     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 02                          a db 2
    15 00000001 0300                        b dw 3
    16 00000003 05000000                    c dd 5
    17 00000007 0500000000000000            d dq 5
    18                                  ; (c-d-a)+(b+b)-(c+a) = (4 - 5 - 2) + (3 + 3) - (4 + 2) = -3 + 6 - 6 = -3
    19                                  segment code use32 class=code
    20                                      start:
    21                                         
    22                                         
    23 00000000 668B1D[01000000]                mov bx, [b]
    24 00000007 66031D[01000000]                add bx, [b]
    25 0000000E 8B1D[03000000]                  mov ebx, [b + 2]
    26                                         
    27 00000014 A0[00000000]                    mov al, [a]
    28 00000019 6698                            cbw
    29 0000001B 98                              cwde
    30 0000001C A1[03000000]                    mov eax, [c]
    31                                          
    32 00000021 29C3                            sub ebx, eax
    33 00000023 53                              push ebx
    34                                          
    35 00000024 A1[03000000]                    mov eax, [c]
    36 00000029 99                              cdq
    37 0000002A 2B05[07000000]                  sub eax, [d]
    38 00000030 1B15[0B000000]                  sbb edx, [d + 4]
    39 00000036 89D1                            mov ecx, edx
    40 00000038 89C3                            mov ebx, eax
    41                                          
    42 0000003A A0[00000000]                    mov al, [a]
    43 0000003F 6698                            cbw
    44 00000041 98                              cwde
    45 00000042 99                              cdq
    46 00000043 29C3                            sub ebx, eax
    47 00000045 19D1                            sbb ecx, edx
    48                                          
    49 00000047 58                              pop eax
    50 00000048 99                              cdq
    51                                          
    52 00000049 01D8                            add eax, ebx
    53 0000004B 11CA                            adc edx, ecx
    54                                          
    55                                          ; exit(0)
    56 0000004D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    57 0000004F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
