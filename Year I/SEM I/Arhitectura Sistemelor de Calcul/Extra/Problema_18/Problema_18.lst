     1                                  ; 18. Se da un fisier text care contine litere, spatii si puncte. Sa se citeasca continutul fisierului, sa se determine numarul de cuvinte si sa se afiseze pe ecran aceasta valoare. (Se considera cuvant orice secven
     2                                  
     3                                  bits 32
     4                                  
     5                                  global start
     6                                  
     7                                  extern fopen, printf, fclose, fread, exit
     8                                  import fopen msvcrt.dll
     9                                  import printf msvcrt.dll 
    10                                  import fclose msvcrt.dll
    11                                  import fread msvcrt.dll
    12                                  import exit msvcrt.dll
    13                                  
    14                                  segment date use32 class = date
    15 00000000 7200                        mod_acces db "r", 0
    16 00000002 6F75747075742E7478-         output db "output.txt", 0
    16 0000000B 7400               
    17 0000000D FFFFFFFF                    descriptor dd -1
    18 00000011 4E756D6172756C2064-         printf_format db "Numarul de cuvinte este: %d", 0
    18 0000001A 6520637576696E7465-
    18 00000023 20657374653A202564-
    18 0000002C 00                 
    19                                      lg equ 200
    20 0000002D 00<rept>                    cuv times (lg + 1) db 0 
    21 000000F6 00000000                    contor dd 0
    22 000000FA 00000000                    contor_general dd 0
    23                                  segment code use32 class = code
    24                                      start:
    25                                          
    26 00000000 68[00000000]                    push dword mod_acces
    27 00000005 68[02000000]                    push dword output
    28 0000000A FF15[00000000]                  call [fopen]
    29 00000010 83C408                          add esp, 4 * 2
    30                                          
    31 00000013 A3[0D000000]                    mov [descriptor], eax
    32                                          
    33 00000018 83F800                          cmp eax, 0
    34 0000001B 0F848F000000                    je final
    35                                          
    36 00000021 FF35[0D000000]                  push dword [descriptor]
    37 00000027 68C8000000                      push dword lg
    38 0000002C 6A01                            push dword 1
    39 0000002E 68[2D000000]                    push dword cuv
    40 00000033 FF15[00000000]                  call [fread]
    41 00000039 83C410                          add esp, 4 * 4
    42                                          
    43 0000003C 89C1                            mov ecx, eax
    44                                          
    45 0000003E 31FF                            xor edi, edi
    46 00000040 31F6                            xor esi, esi
    47 00000042 31D2                            xor edx, edx
    48 00000044 31DB                            xor ebx, ebx 
    49                                    
    50 00000046 83F900                          cmp ecx, 0
    51 00000049 7465                            je final
    52                                          
    53                                          bucla:
    54 0000004B 8A9E[2D000000]                      mov bl, [cuv + esi] ; cuv[esi]
    55                                  
    56 00000051 80FB00                              cmp bl, 0
    57 00000054 740C                                je non_litera
    58                                              
    59 00000056 80FB2E                              cmp bl, '.'
    60 00000059 7407                                je non_litera
    61                                              
    62 0000005B 80FB20                              cmp bl, ' '
    63 0000005E 7402                                je non_litera
    64                                              
    65 00000060 EB2B                                jmp litera
    66                                          non_litera:
    67                                              
    68                                              
    69 00000062 833D[F6000000]00                    cmp dword[contor], 0
    70 00000069 741E                                je flow
    71                                              
    72 0000006B BF01000000                          mov edi, 1
    73 00000070 013D[FA000000]                      add [contor_general], edi
    74                                              
    75 00000076 8B15[F6000000]                      mov edx, [contor]
    76 0000007C 2915[F6000000]                      sub [contor], edx
    77                                              
    78 00000082 80FB00                              cmp bl, 0
    79 00000085 7413                                je afisare
    80                                              
    81 00000087 EB00                                jmp flow
    82                                             
    83                                          flow:
    84 00000089 46                                  inc esi
    85 0000008A 49                                  dec ecx
    86 0000008B EBBE                                jmp bucla
    87                                                          
    88                                          litera:
    89 0000008D BF01000000                          mov edi, 1
    90 00000092 013D[F6000000]                      add [contor], edi
    91 00000098 EBEF                                jmp flow
    92                                          
    93                                           
    94                                          afisare:
    95 0000009A FF35[FA000000]                      push dword [contor_general]
    96 000000A0 68[11000000]                        push dword printf_format
    97 000000A5 FF15[00000000]                      call [printf]
    98 000000AB 83C408                              add esp, 4 * 2
    99                                              
   100 000000AE EB00                                jmp final
   101                                      final: 
   102 000000B0 FF35[0D000000]                  push dword [descriptor]
   103 000000B6 FF15[00000000]                  call [fclose]
   104 000000BC 83C404                          add esp, 4 * 1
   105                                          
   106 000000BF 6A00                            push dword 0
   107 000000C1 FF15[00000000]                  call [exit]
   108                                          
   109                                          
