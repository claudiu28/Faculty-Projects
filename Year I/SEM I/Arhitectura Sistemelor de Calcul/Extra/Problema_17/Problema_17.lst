     1                                  ;17.Se da un nume de fisier (definit in segmentul de date). Sa se creeze un fisier cu numele dat, apoi sa se citeasca de la tastatura numere si sa se scrie din valorile citite in fisier numerele divizibile cu 7, pan
     2                                  
     3                                  
     4                                  bits 32
     5                                  
     6                                  global start
     7                                  
     8                                  extern fopen,fclose,exit,fprintf,scanf
     9                                  import fopen msvcrt.dll
    10                                  import scanf msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import fprintf msvcrt.dll
    13                                  import exit msvcrt.dll
    14                                  
    15                                  segment date use32 class = date
    16                                  
    17 00000000 7700                        mod_access db "w", 0
    18 00000002 6F75747075742E7478-         output db "output.txt", 0
    18 0000000B 7400               
    19 0000000D 00000000                    numar dd 0
    20 00000011 256400                      format_numar db "%d", 0
    21 00000014 4E756D6172756C2065-         format db "Numarul este: %d ", 13, 10, 0
    21 0000001D 7374653A202564200D-
    21 00000026 0A00               
    22 00000028 FFFFFFFF                    descriptor dd -1
    23                                      
    24                                  segment code use32 class = code
    25                                  
    26                                      start:
    27 00000000 68[00000000]                    push dword mod_access
    28 00000005 68[02000000]                    push dword output
    29 0000000A FF15[00000000]                  call [fopen]
    30 00000010 83C408                          add esp, 4 * 2
    31                                          
    32 00000013 A3[28000000]                    mov [descriptor], eax
    33                                          
    34 00000018 83F800                          cmp eax, 0
    35 0000001B 7449                            je final
    36                                          
    37                                          bucla:
    38 0000001D 68[0D000000]                        push dword numar
    39 00000022 68[11000000]                        push dword format_numar
    40 00000027 FF15[00000000]                      call [scanf]
    41 0000002D 83C408                              add esp, 4 * 2
    42                                              
    43 00000030 31D2                                xor edx, edx
    44 00000032 A1[0D000000]                        mov eax, [numar]
    45                                              
    46 00000037 83F800                              cmp eax, 0
    47 0000003A 742A                                je final
    48                                              
    49 0000003C BB07000000                          mov ebx, 7
    50                                              
    51 00000041 F7F3                                div ebx
    52                                              
    53 00000043 83FA00                              cmp edx, 0
    54 00000046 7402                                je divizibile
    55                                              
    56 00000048 EBD3                                jmp bucla
    57                                              
    58                                          divizibile:
    59 0000004A FF35[0D000000]                      push dword [numar]
    60 00000050 68[14000000]                        push dword format
    61 00000055 FF35[28000000]                      push dword [descriptor]
    62 0000005B FF15[00000000]                      call [fprintf]
    63 00000061 83C40C                              add esp, 4 * 3
    64                                              
    65 00000064 EBB7                                jmp bucla    
    66                                      final:
    67 00000066 FF35[28000000]                  push dword [descriptor]
    68 0000006C FF15[00000000]                  call [fclose]
    69 00000072 83C404                          add esp, 4 * 1
    70                                          
    71 00000075 6A00                            push dword 0
    72 00000077 FF15[00000000]                  call [exit]
    73                                      
