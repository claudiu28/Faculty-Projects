     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern scanf, printf, exit, gets
     6                                  
     7                                  import gets msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  import exit msvcrt.dll
    11                                  
    12                                  segment data use32 class = data
    13 00000000 00<rept>                    propozitie times 101 db 0
    14 00000065 256400                      format db "%d", 0
    15 00000068 00<rept>                    invers_propozitie times 101 db 0
    16                                  
    17                                  segment code use32 class = code
    18                                  start:
    19 00000000 8D05[00000000]              lea eax, [propozitie]
    20 00000006 50                          push dword eax
    21 00000007 FF15[00000000]              call [gets]
    22 0000000D 83C404                      add esp, 4
    23                                  
    24 00000010 31F6                        xor esi, esi  
    25 00000012 31C0                        xor eax, eax 
    26                                  
    27                                      bucla:
    28 00000014 8A9E[00000000]                  mov bl, [propozitie + esi]
    29                                          
    30 0000001A 80FB20                          cmp bl, ' '
    31 0000001D 7407                            je invers
    32                                          
    33 0000001F 80FB00                          cmp bl, 0
    34 00000022 7402                            je invers
    35                                          
    36 00000024 EB2B                            jmp flow
    37                                  
    38                                      invers:
    39 00000026 31FF                            xor edi,edi
    40 00000028 89F7                            mov edi, esi  
    41                                          inversare:
    42                                              
    43 0000002A 83FE00                              cmp esi, 0
    44 0000002D 7415                                je modificare
    45                                              
    46 0000002F 4E                                  dec esi
    47                                              
    48 00000030 8A96[00000000]                      mov dl, [propozitie + esi]
    49 00000036 8890[68000000]                      mov [invers_propozitie + eax], dl
    50 0000003C 40                                  inc eax
    51                                              
    52 0000003D 80FA20                              cmp dl, ' '
    53 00000040 7402                                je modificare
    54 00000042 EBE6                                jmp inversare
    55                                  
    56                                          modificare:
    57 00000044 B220                                mov dl, ' '
    58 00000046 8890[68000000]                      mov [invers_propozitie + eax], dl
    59 0000004C 40                                  inc eax
    60                                  
    61 0000004D 89FE                                mov esi, edi  
    62                                              
    63 0000004F EB00                                jmp flow
    64                                  
    65                                          flow:
    66 00000051 80FB00                              cmp bl, 0
    67 00000054 7403                                je afisare
    68                                       
    69 00000056 46                                  inc esi       
    70 00000057 EBBB                                jmp bucla
    71                                              
    72                                           
    73                                              
    74                                      afisare:
    75 00000059 8D05[68000000]                  lea eax, [invers_propozitie]
    76 0000005F 50                              push dword eax
    77 00000060 FF15[00000000]                  call [printf]
    78 00000066 83C404                          add esp, 4
    79 00000069 EB00                            jmp final
    80                                  
    81                                      final:
    82 0000006B 6A00                            push dword 0
    83 0000006D FF15[00000000]                  call [exit]
