     1                                  ;30. Se da un nume de fisier (definit in segmentul de date). Sa se creeze un fisier cu numele dat, apoi sa se citeasca de la tastatura ;cuvinte pana cand se citeste de la tastatura caracterul '$'. Sa se scrie in fis
     2                                  
     3                                  bits 32
     4                                  
     5                                  global start
     6                                  
     7                                  extern scanf, exit, fprintf, fclose, fopen
     8                                  import scanf msvcrt.dll
     9                                  import exit msvcrt.dll
    10                                  import fprintf msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import fopen msvcrt.dll
    13                                  
    14                                  segment date use32 class = date
    15                                  
    16 00000000 746578745F63696672-         nume_fisier db "text_cifre", 0
    16 00000009 6500               
    17 0000000B 7700                        format_fisier db "w", 0
    18 0000000D 257300                      format_string db "%s", 0
    19 00000010 00000000<rept>              cuvant times 101 dd 0
    20 000001A4 FFFFFFFF                    descriptor dd -1
    21 000001A8 2000                        spatiu db " ", 0
    22                                  segment code use32 class = code
    23                                      start:
    24                                          
    25 00000000 68[0B000000]                    push dword format_fisier
    26 00000005 68[00000000]                    push dword nume_fisier
    27 0000000A FF15[00000000]                  call [fopen]
    28 00000010 83C408                          add esp, 4 * 2
    29                                          
    30 00000013 A3[A4010000]                    mov [descriptor], eax
    31                                          
    32 00000018 83F800                          cmp eax, 0
    33 0000001B 746B                            je final_program
    34                                          
    35                                          bucla:
    36 0000001D 68[10000000]                        push dword cuvant
    37 00000022 68[0D000000]                        push dword format_string
    38 00000027 FF15[00000000]                      call [scanf]
    39 0000002D 83C408                              add esp, 4 * 2
    40                                              
    41 00000030 31F6                                xor esi, esi
    42 00000032 31DB                                xor ebx, ebx
    43                                          
    44 00000034 FC                                  cld
    45 00000035 31D2                                xor edx, edx
    46                                              repeta:
    47                                                  
    48 00000037 8A9E[10000000]                          mov bl, [cuvant + esi]
    49                                                  
    50 0000003D 80FB24                                  cmp bl, '$'
    51 00000040 7446                                    je final_program
    52                                                  
    53 00000042 80FB00                                  cmp bl, 0
    54 00000045 740F                                    je verifica_cifra
    55                                                  
    56                                                  
    57 00000047 80FB30                                  cmp bl, '0'
    58 0000004A 7C39                                    jl continua
    59                                                  
    60 0000004C 80FB39                                  cmp bl, '9'
    61 0000004F 7F34                                    jg continua
    62                                              
    63 00000051 BA01000000                              mov edx, 1
    64                                                  
    65                                              verifica_cifra:    
    66 00000056 83FA01                                  cmp edx, 1
    67 00000059 75C2                                    jne bucla
    68                                             
    69                                              afiseaza_cuvant:
    70 0000005B 68[10000000]                            push dword cuvant
    71 00000060 FF35[A4010000]                          push dword [descriptor]
    72 00000066 FF15[00000000]                          call [fprintf]
    73 0000006C 83C408                                  add esp, 4 * 2
    74                                                  
    75 0000006F 68[A8010000]                            push dword spatiu
    76 00000074 FF35[A4010000]                          push dword [descriptor]
    77 0000007A FF15[00000000]                          call [fprintf]
    78 00000080 83C408                                  add esp, 4 * 2
    79                                              
    80 00000083 EB98                                    jmp bucla
    81                                              
    82                                              continua:
    83                                                  
    84 00000085 46                                      inc esi
    85 00000086 EBAF                                    jmp repeta
    86                                                  
    87                                      
    88                                      final_program:
    89 00000088 FF35[A4010000]                  push dword [descriptor]
    90 0000008E FF15[00000000]                  call [fclose]
    91 00000094 83C404                          add esp, 4
    92                                          
    93 00000097 6A00                            push dword 0
    94 00000099 E8(00000000)                    call exit
    95                                          
    96                                                  
